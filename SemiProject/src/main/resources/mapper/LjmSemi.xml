<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.LjmSemiMapper">


   <delete id="deleteProductsFromCart">
    DELETE FROM bookinglist
    WHERE user_id = #{userId}
    AND product_id IN
    <foreach item="item" collection="productIds" open="(" separator="," close=")">
        #{item}
    </foreach>
   </delete>


	
	<select id="getDefaultUserId" resultType="int">
    SELECT id FROM users 
	</select>


	
	 <select id="getAllOrders" resultType="com.project.model.OrderItem">
        SELECT 
            o.total_price, 
            p.productName AS productName, 
            p.productPrice AS productPrice, 
            p.shippingfee AS shippingFee,
            p.productId AS productId,
            oi.quantity
        FROM Orders o
        JOIN OrderItem oi ON o.id = oi.order_id
        JOIN products p ON oi.product_id = p.productId
        WHERE o.user_id = #{userId}
    </select>

    <!-- getUserIdByUserId 쿼리 추가 (users 테이블에서 id를 가져오는 쿼리) -->
    <select id="getUserIdByUserId" resultType="int">
        SELECT id FROM users
    </select>
	
	<!--
	<insert id="insertOrder" parameterType="map">
    INSERT INTO OrderItem (order_id, product_id, quantity)
    VALUES ( CONCAT(#{bookingId}, 'O'), #{productId}, #{quantity});
	</insert>

	<insert id="insertOrderTotal" parameterType="map">
    INSERT INTO Orders (user_id, total_price, created_at, status, id)
    VALUES (#{userId}, #{totalPrice}, NOW(), #{status}, CONCAT(#{bookingId}, 'O'));
	</insert>
	-->
	<insert id="insertOrderTotal" parameterType="map">
	    INSERT INTO Orders (user_id, total_price, created_at, status)
	    VALUES (#{userId}, #{totalPrice}, NOW(), #{status});
	</insert>
	
	<insert id="insertOrder" parameterType="map">
	    INSERT INTO OrderItem (order_id, product_id, quantity)
	    VALUES (LAST_INSERT_ID(), #{productId}, #{quantity});
	</insert>

	<select id="showbookingitem" resultMap="bookingListResultMap">
    SELECT
     p.productPrice AS productPrice, 
        p.shippingfee AS shippingFee, 
        p.productName AS productName, 
        p.photo AS photo,
       b.booking_id AS bookingId,
       b.product_count As productCount,
       p.productId AS productId
    FROM bookinglist b
    JOIN products p ON b.product_id = p.productId
    WHERE b.user_id=#{userId}
	</select>
	
	<select id="getBookingIdByUserId" resultType="int">
    SELECT booking_id 
    FROM bookinglist 
    WHERE user_id=#{userId}
	</select>
	
	<select id="generateBookingId" resultType="int">
        SELECT booking_id from bookinglist where user_id = #{userId}
    </select>
	
	<select id="getOrdersByUserId" parameterType="int">
        SELECT * FROM Orders WHERE user_id = #{userId}
    </select>

  	<resultMap id="bookingListResultMap" type="com.project.model.BookingList">
        <result property="bookingId" column="bookingId"/>
        <result property="productName" column="productName"/>
        <result property="productPrice" column="productPrice"/>
        <result property="productCount" column="productCount"/>
        <result property="shippingFee" column="shippingFee"/>
         <result property="productId" column="productId"/>
        <result property="status" column="status"/>
        <result property="userId" column="userId"/>
    </resultMap>
</mapper> 